<launch>
    <arg name="namespace" default="$(env UAV_NAMESPACE)"/>
    <arg name="carrot_out" default="carrot/trajectory"/>
    <arg name="mpc_in" default="carrot/trajectory"/>
    <arg name="odometry" default="msf_core/odometry"/>
    <arg name="model" default="bebop"/>

    <!-- MSF odometry callback-->
    <!--include file="$(find msf_updates)/launch/msf_bebop.launch">
        <arg name="namespace"   value="$(arg namespace)"/>
    </include-->
    
    <!-- MPC trajectory frame -->
    <node name="trajectory_transform" pkg="tf" type="static_transform_publisher" 
        args="0 0 0 0 0 0 world odom 100" />

    <!-- Linear MPC control -->
    <include file="$(find mav_linear_mpc)/launch/$(arg model)_linear_mpc.launch">
        <arg name="namespace"   value="$(arg namespace)"/>
    </include>

    <!-- Maps MPC output to ardupilot command topic -->
    <include file="$(find multirotor_transformations)/launch/mpc_to_px4_command.launch">
        <arg name="namespace"   value="$(arg namespace)"/>
        <!-- Thrust max ovdje je u mpc parametrima thrust_max*masa-->
        <arg name="thrust_max"  value="170" />
        <arg name="odometry"    value="$(arg odometry)"/>
    </include>

    <!-- Carrot reference topic -->
    <include file="$(find uav_ros_control)/launch/carrot_reference.launch">
        <arg name="ref" value="$(arg carrot_out)"/>
        <arg name="namespace" value="$(arg namespace)"/>
        <arg name="odom" value="$(arg odometry)"/>
    </include>

    <!-- TrajectoryPoint to Trajectory - MPC input -->
    <node pkg="uav_ros_control" name="point_to_trajectory" type="point2trajectory.py" ns="$(arg namespace)">
        <remap from="trajectory_point" to="$(arg mpc_in)"/>
        <remap from="trajectory" to="command/trajectory"/>
        <remap from="odometry"  to="$(arg odometry)"/>
    </node>
    
</launch>
